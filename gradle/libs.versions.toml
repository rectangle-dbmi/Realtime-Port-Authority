[versions]
# NOTE: Some are defined in the top level build.gradle#ext.versions property
# because they are not versions used in this file such as build tools version and target SDK

# Note: This MUST match the Android Studio Kotlin plugin version!!!
# ignore dependabot only for kotlin version!!!
# Tools -> Kotlin -> Configure Kotlin Updates
kotlin = "1.8.20"

android-desugarer = "2.0.3"
android-plugin = "8.0.1"

androidx-appcompat = "1.6.1"
androidx-core = "1.9.0"
androidx-fragment = "1.5.6"
androidx-legacy = "1.0.0"
androidx-lifecycle = "2.6.1"
androidx-mediarouter = "1.3.1"
androidx-recyclerview = "1.3.0"

benManes-versions = "0.46.0"

google-material = "1.8.0"
google-play-location = "18.0.0"
google-play-maps = "18.1.0"
google-play-places = "3.0.0"

jakewharton-timber = "5.0.1"

javax-annotations = "10.0-b28"

junit = "4.13.2"
mockito = "4.5.1"

rx-android = "2.1.1"
rx-java = "2.2.21"
rx-network = "3.0.8"

square-leakcanary = "2.10"
square-retrofit = "2.7.2"
square-okhttp = "4.11.0"

[libraries]
android-desugarer = { module = "com.android.tools:desugar_jdk_libs_nio", version.ref = "android-desugarer" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidx-appcompat" }
androidx-core = { module = "androidx.core:core-ktx", version.ref = "androidx-core" }
androidx-fragment = { module = "androidx.fragment:fragment-ktx", version.ref = "androidx-fragment"}
androidx-lifecycle = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidx-lifecycle" }
androidx-legacy = { module = "androidx.legacy:legacy-support-v4", version.ref = "androidx-legacy" }
androidx-mediarouter = { module = "androidx.mediarouter:mediarouter", version.ref = "androidx-mediarouter" }
androidx-recyclerview = { module = "androidx.recyclerview:recyclerview", version.ref = "androidx-recyclerview"}

google-material = { module = "com.google.android.material:material", version.ref = "google-material" }
google-play-location = { module = "com.google.android.gms:play-services-location", version.ref = "google-play-location" }
google-play-maps = { module = "com.google.android.gms:play-services-maps", version.ref = "google-play-maps" }
# TODO: test if needed
google-play-places = { module = "com.google.android.libraries.places:places", version.ref = "google-play-places" }

jakewharton-timber = { module = "com.jakewharton.timber:timber", version.ref = "jakewharton-timber" }

javax-annotations = { module = "org.glassfish:javax.annotation", version.ref = "javax-annotations" }

kotlin-gradleplugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin" }

junit = { module = "junit:junit", version.ref = "junit" }
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito" }

rx-android = { module = "io.reactivex.rxjava2:rxandroid", version.ref = "rx-android" }
rx-java = { module = "io.reactivex.rxjava2:rxjava", version.ref = "rx-java" }
rx-network = { module = "com.github.pwittchen:reactivenetwork-rx2", version.ref = "rx-network" }

square-leakcanary = { module = "com.squareup.leakcanary:leakcanary-android", version.ref = "square-leakcanary" }
square-okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "square-okhttp" }
square-okhttp-logginginterceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "square-okhttp" }
square-retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "square-retrofit" }
square-retrofit-adapter = { module = "com.squareup.retrofit2:adapter-rxjava2", version.ref = "square-retrofit" }
square-retrofit-converter = { module = "com.squareup.retrofit2:converter-gson", version.ref = "square-retrofit" }

[bundles]
android = [
    "androidx-appcompat",
    "androidx-core",
    "androidx-fragment",
    "androidx-lifecycle",
    "androidx-mediarouter",
    "androidx-recyclerview",
    "jakewharton-timber",
]

android-app = [
    "google-material"
]

google-play = [
    "google-play-location",
    "google-play-maps",
    "google-play-places"
]

restcalls = [
    "square-okhttp",
    "square-retrofit",
    "square-retrofit-converter",
    "square-retrofit-adapter",
    "square-okhttp-logginginterceptor"
]

testing = [
    "junit",
    "mockito-core"
]

[plugins]
android-application = { id = "com.android.application", version.ref = "android-plugin" }
android-library = { id = "com.android.library", version.ref = "android-plugin" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
benManes-versions = { id = "com.github.ben-manes.versions", version.ref = "benManes-versions" }