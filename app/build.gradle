apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.github.ben-manes.versions'

// version dependnecies should be added via ../build.gradle -> `region versions for dependencies`
// I did this since we can have multiple projects and they should all share the same versions
// only exception to this are the published versions of each code specific to the project

android.buildTypes.each { type ->
    type.buildConfigField 'String', 'PAT_API_KEY', keys.truetime.release // variable defined in `../build.gradle`
    type.buildConfigField 'String', "PAT_API_BASE_URL", "\"${baseUrls.truetime}\""
}

android {

    compileSdkVersion versions.android.targetSdk
    defaultConfig {
        applicationId "rectangledbmi.com.pittsburghrealtimetracker"
        minSdkVersion versions.android.minSdk
        targetSdkVersion versions.android.targetSdk
        versionCode 160080002
        versionName "8.0.2-beta"
    }
    lintOptions {
        warning 'InvalidPackage'
    }
    buildTypes {

        debug {
            minifyEnabled false
            resValue "string", "google_maps_key", keys.google.maps.debug // variable defined in `../build.gradle`
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue "string", "google_maps_key", keys.google.maps.release // variable defined in `../build.gradle`
        }
    }
    compileOptions {
        sourceCompatibility versions.java.target
        targetCompatibility versions.java.target
    }
    sourceSets {
        main.java.srcDirs += "src/main/kotlin"
    }
    buildToolsVersion '30.0.2'
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(path: ':pat-static')
//    releaseImplementation project(path: ':pat-static', configuration: "release")

    repositories {
        mavenCentral()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    }

    //google play services maps
    implementation "com.google.android.gms:play-services-maps:${versions.google.play}"
    //google play services location and places
    implementation "com.google.android.gms:play-services-location:${versions.google.play}"
    implementation "com.google.android.gms:play-services-places:${versions.google.places}"

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'

    implementation 'androidx.mediarouter:mediarouter:1.2.5'

    implementation "androidx.fragment:fragment-ktx:1.3.6"

    //3rd party android libraries
    implementation "com.github.pwittchen:reactivenetwork-rx2:${versions.rx.network}"
    implementation "com.jakewharton.timber:timber:${versions.square.timber}"
    implementation "com.squareup.retrofit2:retrofit:${versions.square.retrofit}"
    implementation "com.squareup.retrofit2:converter-gson:${versions.square.retrofit}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${versions.square.rxjava2Adapter}"
    implementation "io.reactivex.rxjava2:rxandroid:${versions.rx.android}"
    implementation "io.reactivex.rxjava2:rxjava:${versions.rx.java2}"

    debugImplementation "com.squareup.leakcanary:leakcanary-android:${versions.square.leakCanary}"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:${versions.square.leakCanary_no_op}"
    testImplementation "com.squareup.leakcanary:leakcanary-android-no-op:${versions.square.leakCanary_no_op}"

    testImplementation "junit:junit:${versions.test.junit}"
    testImplementation "org.mockito:mockito-core:${versions.test.mockito}"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'org.glassfish:javax.annotation:10.0-b28'

}

buildscript {
    repositories {
        google()
        mavenCentral()
        jcenter()
    }

    dependencies {
        // check for updates of 3rd party libs:
        // `./gradlew dependencyUpdates -Drevision=release`
        classpath "com.github.ben-manes:gradle-versions-plugin:${versions.gradleVersions}"
    }
}
